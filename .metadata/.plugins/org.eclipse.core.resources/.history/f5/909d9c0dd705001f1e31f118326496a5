package com.ezen.test.controller;


import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import com.ezen.test.domain.BoardVO;
import com.ezen.test.domain.PagingVO;
import com.ezen.test.handler.PagingHandler;
import com.ezen.test.service.BoardService;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@RequestMapping("/board/*")
@Slf4j
@RequiredArgsConstructor
@Controller
public class BoardController {
	
//	@Inject
	private final BoardService bsv;
	
	@GetMapping("/register")
	public String register() {
		return "/board/register";
	}
	//@RequestParam("name")String name : 파라미터를 받을 때
	//required : 필수 여부 false : 파라미터가 없어도 예외가 발생하지 않음
	@PostMapping("/insert")
	public String insert(BoardVO bvo, @RequestParam(name="files", required = false)MultipartFile[] files) {
		log.info("bvo >> {}", bvo);
		int isOk = bsv.insert(bvo);
		return "redirect:/board/list";
	}
	@GetMapping("/list")
	public String list(Model m, PagingVO pgvo) {	//PagingVO 파라미터가 없으면 기본 생성자 값이 뜬다
		log.info("pgvo >> {}", pgvo);
		//리턴타입은 목적지 경로에 대한 타입(destPage가 리턴)
		//Model 객체 => request.setAttribute 역할을 하는 객체
		List<BoardVO> list = bsv.getList(pgvo);
		int totalCount = bsv.getTotal(pgvo);
		PagingHandler ph = new PagingHandler(pgvo, totalCount);
		log.info("ph >> {}", ph);
		m.addAttribute("list", list);
		m.addAttribute("ph", ph);
		return "/board/list";
	}
	@GetMapping({"/detail","/modify"})
	//컨트롤러로 들어오는 경로와 jsp로 나가는 경로가 같으면 void
	public void detail(Model m, @RequestParam("bno")int bno) {
		log.info("bno >> {}", bno);
		BoardVO bvo = bsv.getDetail(bno);
		m.addAttribute("bvo", bvo);
	}
	@PostMapping("/modify")
	public String modify(BoardVO bvo) {
		log.info("update bvo >> {}", bvo);
		bsv.update(bvo);
		// /board/detail.jsp : 새로운 데이터를 가지고 가야 함, param이 필요
		return "redirect:/board/detail?bno="+bvo.getBno();
	}
	@GetMapping("/delete")
	public String delete(@RequestParam("bno")int bno) {
		bsv.delete(bno);
		return "redirect:/board/list";
	}
}
