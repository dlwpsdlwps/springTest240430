모달창 수정

writer 내 정보이기 때문에 세션에서 가져올 수 있다, 굳이 js에 가져올 필요없음
nextSibling : 한 부모 안에서 다음 형제를 찾기

js 댓글 출력부 li에 data-cno 달기

responseBody 사용 방식 (수정, 삭제)

---------------------------------
파일 업로드
D:\_myProject\_java\_fileUpload

WebConfig => 파일 경로 등록
location
maxfilesize => 20mb
maxrequestsize => 40mb
filesizethreshold => 20mb

ServletConfig => 화면에서 파일로 접근할 경로 등록
리소스 경로 설정
multipartResolver bean 등록

resister.jsp 작성
enctype="multipart/form=data"

boardRegister.js 작성

FileVO 생성
BoardController insert 수정
FileHandler 생성

BoardDTO 생성
BoardController insert 수정
BoardServiceImpl insert 수정 - @Transactional

보드맵퍼 수정 selectOne

FileDAO 생성
fileMapper 생성

--0507
BoardController - detail() - BoardDTO로 수정

BoardServiceImpl - getDetail() - bvo, flist, 묶어서 DTO return

detail.jsp - <c:set value="${bdto.bvo }" var="bvo"></c:set>
업로드 경로 - /upload/ => /up/로 변경 (ServletConfiguration 설정때문에)

detail.jsp - 이미지 파일이 아닌 경우 다운로드

modify 수정

redirectAttribute?

scheduler
pom - quartz-2.3.2 의존성 추가

핸들러 - FileSweeper 생성

-------------------------------------------

--user table
create table user(
email varchar(100) not null,
pwd varchar(256) not null,
nick_name varchar(100) not null,
reg_date datetime default now(),
last_login datetime default null,
primary key(email));

--auth table
create table auth_user(
email varchar(100) not null,
auth varchar(50) not null);

alter table auth_user add constraint fk_auth foreign key(email) references user(email);

UserVO, AuthVO 생성

pom.xml - security taglib 의존성 추가

SecurityConfig 생성 - SecurityInitializer - LoginSuccessHandler - LoginFailureHandler - CustomAuthUserService

05/08

1.유저컨트롤러 register()에 권한 추가
	권한 줄때는 대문자 표기
	ROLE_USER
	ROLE_ADMIN

2.CustomAuthUserService
	serviceImpl이랑 비슷함
	기본라인 아니면 inject나 autowired -> UserDAO연결하기

	loadUserByUsername()
		// username : 로그인을 시도한 email
		// UserDetails : 인증용 객체
		// username이 DB에 있는지 확인하여 인증용 객체를 리턴

3.AuthUser
	extends User(springframework)
	생성자 2번째

	Collection으로 형변환하기 위해
		public AuthUser(UserVO uvo) {
			super(uvo.getEmail(), uvo.getPwd(), 
					uvo.getAuthList().stream()
					.map(authVO ->
					new SimpleGrantedAuthority(authVO.getAuth()))
					.collect(Collectors.toList()));
			this.uvo = uvo;
		}

4.LoginFailureHandler
	setAuthEmail()
	//exception 발생시 메세지 저장 -> 다양하게 exception 추가 가능
	
5.UserController
	login()
	loginPost()

6.login.jsp
	not empty (같음) != ''
	errMsg 값 확인해보기

7.LoginSuccessHandler

	//redirect 데이터를 가지고 리다이렉트 하는 역할
	redStg
	//로그인 정보, 경로
	reqCache

	//로그인 일자 기록 lastLogin
	UserService 연결

	멤버변수 단일로 getter setter 생성 가능

8.header.jsp
	- <%@ taglib uri="http://www.springframework.org/security/tags" prefix="sec" %> 추가
		taglib는 페이지마다 있어야함

9.register.jsp - writer에 닉네임 표시
  detail.jsp - 댓글에 닉네임

10.회원리스트 생성